Goodbye if-else, Hello Pattern Matching in JavaScript (PROPOSAL) | by Code Everywhere | Oct, 2023 | JavaScript in Plain EnglishOpen in appSign upSign InWriteSign upSign InMastodonMember-only storyGoodbye if-else, Hello Pattern Matching in JavaScript (PROPOSAL)Code Everywhere·FollowPublished inJavaScript in Plain English·3 min read·Oct 1--30ShareThis article is a proposal suggesting the use of “pattern matching” in JavaScript as an alternative to traditional “if-else” and “switch-case” structures.In the ever-evolving realm of software development, adaptability is not just a skill but a necessity. Among the vast sea of languages, JavaScript has time and again proven its resilience, adapting to the ever-changing demands of the industry. As whispers of “pattern matching” grow louder, it’s clear that the traditional bastions of if-else and switch-case might soon be relics of the past. The winds of change are blowing, hinting at a more streamlined and efficient approach to conditional logic. Dive with us into this transformative journey as we explore the exciting prospects of pattern matching in JavaScript's future landscape.1. Taking a Nostalgic Walk: The Era of if-else and switch-caseSeasoned developers remember starting their JavaScript journey with traditional conditional constructs like if-else and switch-case. Such structures are akin to the ABCs of the language.Consider a rudimentary representation of handling action types in a backend system:function handleAction(actionName) {  if (actionName === 'FETCH_DATA') {    return fetchData();  } else if (actionName === 'UPDATE_RECORD') {    return updateRecord();  } else if (actionName === 'DELETE_RECORD') {    return deleteRecord();  } else {    return 'Invalid Action';  }}function handleAction(actionName) {  switch (actionName) {    case 'FETCH_DATA':      return fetchData();    case 'UPDATE_RECORD':      return updateRecord();    case 'DELETE_RECORD':      return deleteRecord();    default:      return 'Invalid Action';  }}Though clear, as our system expands and incorporates more actionNames, this structure starts showing its strain.2. Unearthing the Magic: The Brilliance of whenThe inception of the when keyword heralds a transformative era. Using when, our earlier example morphs into:function handleAction(actionName) {  return actionName when {    'FETCH_DATA' -> fetchData(),    'UPDATE_RECORD' -> updateRecord(),    'DELETE_RECORD' ->…----30FollowWritten by Code Everywhere1.2K Followers·Writer for JavaScript in Plain EnglishFollowMore from Code Everywhere and JavaScript in Plain EnglishCode EverywhereNestJS: Unwrapping the Magic with Top 10 Utility ClassesEver felt like coding needs some magic? NestJS is waving its wand! Here are ten of its most enchanting tools ready to sprinkle some magic…·3 min read·Oct 12--The womaninJavaScript in Plain EnglishA 40+ Years Experienced Software Architect Advised Me How Not to Be Burned out as a DeveloperOut of all my interviews, I liked him most so far. He is funny, wise and this article helped me in my career·9 min read·Sep 25--15Somnath SinghinJavaScript in Plain EnglishBill Gates: People Don’t Realize What’s ComingTech Jobs Won’t Exist in 5 Years·13 min read·Apr 13--429Code EverywhereinJavaScript in Plain English10 Advanced and Important Node.js MistakesEver wanted to know how to level up your skills in Node.js development and avoid common mistakes that could potentially harm your…·12 min read·Jul 29--6See all from Code EverywhereSee all from JavaScript in Plain EnglishRecommended from MediumYuri BettinStackademicDon't Be Afraid Of Javascript GeneratorsUnderstand JavaScript generators, discover their unique capabilities, and learn through real-world examples.5 min read·Oct 10--12fatfishinJavaScript in Plain EnglishUse Chrome DevTools Like a Senior Frontend Developer11 Tricks You Must Know If You Choose Chrome as Your Development Tool·5 min read·Oct 12--6ListsGeneral Coding Knowledge20 stories·473 savesIt's never too late or early to start something15 stories·174 savesCoding & Development11 stories·229 savesStories to Help You Grow as a Software Developer19 stories·488 savesGopesh JangidReplace react useState with useSignal hook for taking multiple benefitsReact is a popular JavaScript library for building user interfaces, and it provides various hooks that simplify state management within…4 min read·Jul 18--4Dr. Ashish BamaniainLevel Up CodingGoogle Rejected Max Howell(Creator Of Homebrew) For Getting This Interview Question Wrong. Can You?Can you solve this Google interview question?·4 min read·Oct 3--64Tom JayStop using Integer ID’s in your DatabaseI’ve seen this over and over for the last 30 years, people let the database set the ID or Primary Key of a table from the database, at…·3 min read·May 22--130pulkit kathuriainweb-developerYou shouldn’t use NextJS 13Why You Should Not Use Next.js 13. Yes, for Next.js enthusiasts, in this article, I will share why Next.js isn’t a good choice.·5 min read·Jul 23--14See more recommendationsHelpStatusAboutCareersBlogPrivacyTermsText to speechTeams
































